//===-- Cpu0Subtarget.h - Define Subtarget for the Cpu0 ---------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Cpu0 specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_CPU0_CPU0SUBTARGET_H
#define LLVM_LIB_TARGET_CPU0_CPU0SUBTARGET_H

#include "Cpu0FrameLowering.h"
#include "Cpu0ISelLowering.h"
#include "Cpu0InstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/MC/MCInstrItineraries.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "Cpu0GenSubtargetInfo.inc"

//@1
namespace llvm {
class StringRef;

class Cpu0TargetMachine;

class Cpu0Subtarget : public Cpu0GenSubtargetInfo {
protected:
    const SelectionDAGTargetInfo TSInfo;
    const Cpu0InstrInfo InstrInfo;
    const Cpu0FrameLowering FrameLowering;
    const Cpu0TargetLowering TLInfo;

public:

    /// This constructor initializes the data members to match that
    /// of the specified triple.
    Cpu0Subtarget(const Triple &TT, StringRef CPU, StringRef FS, const Cpu0TargetMachine &_TM);
    
    /// ParseSubtargetFeatures - Parses features string setting specified
    /// subtarget options.  Definition of function is auto generated by tblgen.
    void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

    Cpu0Subtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS, const TargetMachine &TM);

    const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
        return &TSInfo;
    }
    const Cpu0InstrInfo *getInstrInfo() const override { 
        return &InstrInfo; 
    }
    const TargetFrameLowering *getFrameLowering() const override {
        return &FrameLowering;
    }
    const Cpu0RegisterInfo *getRegisterInfo() const override {
        return &InstrInfo.getRegisterInfo();
    }
    const Cpu0TargetLowering *getTargetLowering() const override {
        return &TLInfo;
    }

};
} // End llvm namespace

#endif // #if CH >= CH3_1

